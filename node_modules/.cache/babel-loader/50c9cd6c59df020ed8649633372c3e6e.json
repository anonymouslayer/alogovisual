{"ast":null,"code":"const mergeSort = (arr, length) => {\n  // console.log(arr);\n  var result = [];\n  sort(arr, 0, length - 1, result);\n  arr.forEach(element => {\n    element.style = \"bar-sorted\";\n  });\n  result.push(JSON.parse(JSON.stringify(arr)));\n  return result; // console.log(result);\n};\n\nfunction sort(arr, l, r, result) {\n  if (l < r) {\n    let m = Math.floor(l + (r - l) / 2);\n    sort(arr, l, m, result);\n    sort(arr, m + 1, r, result);\n    merge(arr, l, m, r, result);\n    result.push(JSON.parse(JSON.stringify(arr)));\n  }\n}\n\nfunction merge(arr, l, m, r, result) {\n  let temp_left = [];\n  let temp_right = [];\n\n  for (let i = l; i <= m; i++) {\n    // console.log(JSON.parse(JSON.stringify(arr[i])));\n    temp_left.push(JSON.parse(JSON.stringify(arr[i])));\n  }\n\n  for (let i = m + 1; i <= r; i++) {\n    temp_right.push(JSON.parse(JSON.stringify(arr[i])));\n  }\n\n  var i = 0,\n      j = 0,\n      k = l;\n  var n1 = m - l + 1;\n  var n2 = r - m;\n\n  while (i < n1 && j < n2) {\n    if (temp_left[i].value <= temp_right[j].value) {\n      arr[k] = temp_left[i];\n      arr[k].style = \"bar-swap\"; // result.push(JSON.parse(JSON.stringify(arr)));\n\n      i++;\n      k++;\n    } else {\n      arr[k] = temp_right[j];\n      arr[k].style = \"bar-swap\"; // result.push(JSON.parse(JSON.stringify(arr)));\n\n      j++;\n      k++;\n    }\n  }\n\n  while (i < n1) {\n    arr[k] = temp_left[i];\n    arr[k].style = \"bar-swap\"; // result.push(JSON.parse(JSON.stringify(arr)));\n\n    k++;\n    i++;\n  }\n\n  while (j < n2) {\n    arr[k] = temp_right[j];\n    arr[k].style = \"bar-swap\"; // result.push(JSON.parse(JSON.stringify(arr)));\n\n    k++;\n    j++;\n  }\n}\n\nexport default mergeSort;","map":{"version":3,"sources":["C:/Users/hp/Desktop/project/Algorithm-Visualizer/src/components/Sorting/algorithms/MergeSort.js"],"names":["mergeSort","arr","length","result","sort","forEach","element","style","push","JSON","parse","stringify","l","r","m","Math","floor","merge","temp_left","temp_right","i","j","k","n1","n2","value"],"mappings":"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","sourcesContent":["const mergeSort=(arr,length)=>{\r\n    // console.log(arr);\r\n    var result=[]\r\n    sort(arr,0,length-1,result);\r\n    arr.forEach(element => {\r\n        element.style=\"bar-sorted\";\r\n    });\r\n    result.push(JSON.parse(JSON.stringify(arr)));\r\n    return result;\r\n    // console.log(result);\r\n}\r\nfunction sort(arr,l,r,result){\r\n    if(l<r){\r\n    let m=Math.floor( l+(r-l)/2);\r\n    sort(arr,l,m,result);\r\n    sort(arr,m+1,r,result);\r\n    merge(arr,l,m,r,result);\r\n    result.push(JSON.parse(JSON.stringify(arr)));\r\n    }\r\n}\r\nfunction merge(arr,l,m,r,result){\r\n    let temp_left=[];\r\n    let temp_right=[];\r\n    \r\n    for(let i=l;i<=m;i++){\r\n        // console.log(JSON.parse(JSON.stringify(arr[i])));\r\n        temp_left.push(JSON.parse(JSON.stringify(arr[i])));\r\n    }\r\n    for(let i=m+1;i<=r;i++){\r\n        temp_right.push(JSON.parse(JSON.stringify(arr[i])));\r\n    }\r\n    \r\n    var i=0,j=0,k=l;\r\n    var n1=m-l+1;\r\n    var n2=r-m;\r\n    while(i<n1&&j<n2){\r\n        if(temp_left[i].value<=temp_right[j].value){\r\n            arr[k]=temp_left[i];\r\n            arr[k].style=\"bar-swap\";\r\n            // result.push(JSON.parse(JSON.stringify(arr)));\r\n            i++;\r\n            k++;\r\n        }\r\n        else{\r\n            arr[k]=temp_right[j];\r\n            arr[k].style=\"bar-swap\";\r\n            // result.push(JSON.parse(JSON.stringify(arr)));\r\n            j++;\r\n            k++;\r\n        }\r\n    }\r\n    while(i<n1){\r\n        arr[k]=temp_left[i];\r\n        arr[k].style=\"bar-swap\";\r\n        // result.push(JSON.parse(JSON.stringify(arr)));\r\n        k++;\r\n        i++;\r\n    }\r\n    while(j<n2){\r\n        arr[k]=temp_right[j];\r\n        arr[k].style=\"bar-swap\";\r\n        // result.push(JSON.parse(JSON.stringify(arr)));\r\n        k++;\r\n        j++;\r\n    }\r\n    \r\n}\r\nexport default mergeSort;"]},"metadata":{},"sourceType":"module"}