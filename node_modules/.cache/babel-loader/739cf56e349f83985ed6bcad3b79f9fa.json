{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\project\\\\Algorithm-Visualizer\\\\src\\\\components\\\\ConvexHull\\\\ConvexHull.js\";\nimport React, { Component } from \"react\";\nimport \"../../styles/ConvexHull.css\";\nimport Instruct from \"../Instructions/Instruct\";\nimport instruct_gif from \"../../assets/convex_instruct.gif\";\nimport { NavLink } from \"react-router-dom\";\n\nclass ConvexHull extends Component {\n  constructor() {\n    super();\n\n    this.showModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.makePoint = event => {\n      let rect = this.canvas.getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      var ctx = this.canvas.getContext(\"2d\");\n      ctx.beginPath();\n      ctx.arc(x, y, 10, 0, 2 * Math.PI);\n      ctx.stroke();\n      this.setState({\n        points: [...this.state.points, {\n          x,\n          y\n        }]\n      });\n    };\n\n    this.drawAllNodes = () => {\n      var points = this.state.points;\n      points.forEach(e => {\n        var ctx = this.canvas.getContext(\"2d\");\n        ctx.setLineDash([]);\n        ctx.beginPath();\n        ctx.strokeStyle = \"black\";\n        ctx.arc(e.x, e.y, 10, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n      });\n    };\n\n    this.drawDottedLine = (x1 = this.state.points[0].x, y1 = this.state.points[0].y, x2 = this.state.points[1].x, y2 = this.state.points[1].y) => {\n      var ctx = this.canvas.getContext(\"2d\");\n      ctx.setLineDash([5, 3]);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.closePath();\n      ctx.restore();\n    };\n\n    this.clearBoard = () => {\n      const context = this.canvas.getContext('2d');\n      context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.setState({\n        points: []\n      });\n    };\n\n    this.drawLine = (x1 = this.state.points[0].x, y1 = this.state.points[0].y, x2 = this.state.points[1].x, y2 = this.state.points[1].y) => {\n      var ctx = this.canvas.getContext(\"2d\");\n      ctx.setLineDash([]);\n      ctx.beginPath();\n      ctx.strokeStyle = \"blue\";\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.closePath();\n    };\n\n    this.makeCircle = (x, y) => {\n      var ctx = this.canvas.getContext(\"2d\");\n      ctx.beginPath();\n      ctx.arc(x, y, 10, 0, 2 * Math.PI);\n      ctx.strokeStyle = \"#FF0000\";\n      ctx.stroke();\n      ctx.closePath();\n    };\n\n    this.createRandomNodes = () => {\n      var context = this.canvas.getContext(\"2d\");\n      var num = 10;\n      var max_width = this.canvas.width - 20;\n      var max_height = this.canvas.height - 20;\n      this.clearBoard();\n      var points = [];\n\n      for (var i = 0; i <= num; i++) {\n        var x = Math.floor(Math.random() * (max_width - 50) + 50);\n        var y = Math.floor(Math.random() * (max_height - 50) + 50);\n        points.push({\n          x,\n          y\n        });\n      }\n\n      this.setState({\n        points: points\n      }, this.drawAllNodes);\n    };\n\n    this.compare = (a, b) => {\n      if (a.x < b.x) return -1;\n      if (a.x == b.x && a.y < b.y) return -1;\n      return 1;\n    };\n\n    this.orientation = (a, b, c) => {\n      var alpha = (b.y - a.y) / (b.x - a.x);\n      var beta = (c.y - b.y) / (c.x - b.x);\n      if (alpha > beta) return 1;else if (beta > alpha) return -1;\n      return 0;\n    };\n\n    this.convexHull = e => {\n      e.preventDefault();\n      var points = this.state.points;\n\n      if (points.length <= 2) {\n        var error = document.getElementById(\"error\");\n        error.innerHTML = \"The available points is less than three!!\";\n        error.style.display = \"block\";\n        return;\n      }\n\n      document.getElementById(\"error\").style.display = \"none\";\n      points.sort(this.compare);\n      var n = points.length;\n      var p1 = points[0],\n          p2 = points[n - 1];\n      var up = [],\n          lo = [];\n      lo.push(p1);\n      up.push(p1);\n      const context = this.canvas.getContext('2d'); // context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n      var animate = [];\n\n      for (let i = 1; i < n; i++) {\n        if (i == n - 1 || this.orientation(p1, points[i], p2) != -1) {\n          animate.push(JSON.parse(JSON.stringify(up)));\n\n          while (up.length >= 2 && this.orientation(up[up.length - 2], up[up.length - 1], points[i]) == -1) {\n            up.pop();\n            animate.push(JSON.parse(JSON.stringify(up)));\n          }\n\n          up.push(points[i]);\n        }\n\n        if (i == n - 1 || this.orientation(p1, points[i], p2) != 1) {\n          animate.push(JSON.parse(JSON.stringify(lo)));\n\n          while (lo.length >= 2 && this.orientation(lo[lo.length - 2], lo[lo.length - 1], points[i]) == 1) {\n            lo.pop();\n            animate.push(JSON.parse(JSON.stringify(lo)));\n          }\n\n          lo.push(points[i]);\n        }\n      }\n\n      animate.push(JSON.parse(JSON.stringify(up)));\n      animate.push(JSON.parse(JSON.stringify(lo)));\n      console.log(animate);\n      var flag;\n\n      for (let i = 0; i < animate.length; i++) {\n        // context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        setTimeout(() => {\n          // context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n          this.drawAllNodes();\n          var temp = animate[i];\n\n          for (let j = 0; j < temp.length - 1; j++) {\n            this.drawDottedLine(temp[j].x, temp[j].y, temp[j + 1].x, temp[j + 1].y);\n          }\n        }, 500 * i);\n        flag = i;\n      }\n\n      var result = [];\n\n      for (let i = 0; i < up.length - 1; i++) {\n        result.push(up[i]);\n      }\n\n      for (let i = lo.length - 1; i >= 0; i--) {\n        result.push(lo[i]);\n      }\n\n      setTimeout(() => {\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.drawAllNodes();\n        this.makeCircle(p1.x, p1.y);\n        this.makeCircle(p2.x, p2.y);\n\n        for (let i = 0; i < result.length - 1; i++) {\n          this.drawLine(result[i].x, result[i].y, result[i + 1].x, result[i + 1].y);\n        }\n      }, 500 * flag);\n    };\n\n    this.state = {\n      points: [],\n      showModal: true\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", e => {\n      // var canvas = document.getElementById(\"myCanvas\");\n      this.canvas.setAttribute(\"width\", 0.7 * window.innerWidth);\n      this.canvas.setAttribute(\"height\", 0.7 * window.innerHeight);\n      this.setState({\n        points: []\n      });\n    });\n    this.canvas = document.getElementById(\"myCanvas\");\n    this.canvas.addEventListener(\"mousedown\", e => this.makePoint(e));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100vh\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Instruct, {\n      show: this.state.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, \"How to use?\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"card-img-top img-thumbnail\",\n      style: {\n        marginBottom: \"5px\"\n      },\n      src: instruct_gif,\n      alt: \"Card image cap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      type: \"submit\",\n      onClick: this.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"Close\")), /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"navbar-brand\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"ConvexHull Visualizer\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"navbar-toggler\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarSupportedContent\",\n      \"aria-controls\": \"navbarSupportedContent\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collapse navbar-collapse\",\n      id: \"navbarSupportedContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navbar-nav mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/\",\n      className: \"nav-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link\",\n      href: \"#\",\n      onClick: () => this.createRandomNodes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, \"Random Points \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 111\n      }\n    }, \"(current)\"))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link\",\n      href: \"#\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, \"Instructions \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 96\n      }\n    }, \"(current)\"))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link\",\n      href: \"#\",\n      onClick: () => this.clearBoard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \"Clear \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 96\n      }\n    }, \"(current)\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"error\",\n      className: \"alert alert-danger\",\n      style: {\n        margin: \"auto\",\n        marginBottom: \"5px\",\n        display: \"none\",\n        width: \"50vw\"\n      },\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline my-2 my-lg-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      type: \"submit\",\n      onClick: e => this.convexHull(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, \"Run\")))), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myCanvas\",\n      className: \"canvas\",\n      width: 0.7 * window.innerWidth,\n      height: 0.7 * window.innerHeight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ConvexHull;","map":{"version":3,"sources":["C:/Users/hp/Desktop/project/Algorithm-Visualizer/src/components/ConvexHull/ConvexHull.js"],"names":["React","Component","Instruct","instruct_gif","NavLink","ConvexHull","constructor","showModal","setState","hideModal","makePoint","event","rect","canvas","getBoundingClientRect","x","clientX","left","y","clientY","top","ctx","getContext","beginPath","arc","Math","PI","stroke","points","state","drawAllNodes","forEach","e","setLineDash","strokeStyle","closePath","drawDottedLine","x1","y1","x2","y2","moveTo","lineTo","restore","clearBoard","context","clearRect","width","height","drawLine","makeCircle","createRandomNodes","num","max_width","max_height","i","floor","random","push","compare","a","b","orientation","c","alpha","beta","convexHull","preventDefault","length","error","document","getElementById","innerHTML","style","display","sort","n","p1","p2","up","lo","animate","JSON","parse","stringify","pop","console","log","flag","setTimeout","temp","j","result","componentDidMount","window","addEventListener","setAttribute","innerWidth","innerHeight","render","alignItems","marginBottom","color","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../styles/ConvexHull.css\";\r\nimport Instruct from \"../Instructions/Instruct\";\r\nimport instruct_gif from \"../../assets/convex_instruct.gif\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass ConvexHull extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            points:[],\r\n            showModal:true\r\n        }\r\n    }\r\n    showModal = () => {\r\n        this.setState({ \r\n                showModal: true\r\n            });\r\n      };\r\n    \r\n    hideModal = () => {\r\n    this.setState({ showModal: false });\r\n    };\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\",(e)=>{\r\n            // var canvas = document.getElementById(\"myCanvas\");\r\n            this.canvas.setAttribute(\"width\",0.7*window.innerWidth);\r\n            this.canvas.setAttribute(\"height\",0.7*window.innerHeight);\r\n            this.setState({\r\n                points:[]\r\n            })\r\n\r\n        \r\n        })\r\n        this.canvas = document.getElementById(\"myCanvas\");\r\n        this.canvas.addEventListener(\"mousedown\",(e)=>this.makePoint(e));\r\n    }\r\n    makePoint=(event)=>{\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        let x = event.clientX - rect.left; \r\n        let y = event.clientY - rect.top; \r\n        var ctx = this.canvas.getContext(\"2d\");\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n        this.setState({\r\n            points:[...this.state.points,{x,y}]\r\n        })\r\n    }\r\n    drawAllNodes=()=>{\r\n        var points=this.state.points;\r\n        points.forEach(e=>{\r\n            var ctx = this.canvas.getContext(\"2d\");\r\n            ctx.setLineDash([]);\r\n            ctx.beginPath();\r\n            ctx.strokeStyle=\"black\";\r\n            ctx.arc(e.x, e.y, 10, 0, 2 * Math.PI);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        })\r\n    }\r\n    drawDottedLine=(x1=this.state.points[0].x,y1=this.state.points[0].y,x2=this.state.points[1].x,y2=this.state.points[1].y)=>{\r\n        var ctx = this.canvas.getContext(\"2d\");\r\n        ctx.setLineDash([5, 3]);\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1,y1);\r\n        ctx.lineTo(x2,y2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    }\r\n    clearBoard=()=>{\r\n        const context = this.canvas.getContext('2d');\r\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.setState({\r\n            points:[]\r\n        })\r\n    }\r\n    drawLine=(x1=this.state.points[0].x,y1=this.state.points[0].y,x2=this.state.points[1].x,y2=this.state.points[1].y)=>{\r\n        var ctx = this.canvas.getContext(\"2d\");\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"blue\";\r\n        ctx.moveTo(x1,y1);\r\n\r\n        ctx.lineTo(x2,y2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n    makeCircle=(x,y)=>{\r\n        var ctx = this.canvas.getContext(\"2d\");\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = \"#FF0000\";\r\n        ctx.stroke();\r\n        ctx.closePath()\r\n    }\r\n\r\n    createRandomNodes=() =>{\r\n        var context = this.canvas.getContext(\"2d\");\r\n        var num=10\r\n        var max_width=this.canvas.width-20;\r\n        var max_height=this.canvas.height-20;\r\n        this.clearBoard();\r\n        var points=[]\r\n        for (var i = 0; i <=num; i++) {\r\n            var x = Math.floor(Math.random() * (max_width-50)+50);\r\n            var y = Math.floor(Math.random() * (max_height-50)+50);\r\n            points.push({x,y})\r\n            \r\n        }\r\n        this.setState({\r\n            points:points\r\n        },this.drawAllNodes)\r\n        \r\n    }\r\n    compare=(a,b)=>{\r\n        if(a.x<b.x) return -1;\r\n        if(a.x==b.x&&a.y<b.y) return -1;\r\n        return 1;\r\n    }\r\n    orientation=(a,b,c)=>{\r\n        var alpha=(b.y-a.y)/(b.x-a.x);\r\n        var beta=(c.y-b.y)/(c.x-b.x)\r\n        if(alpha>beta)return 1;\r\n        else if(beta>alpha)return -1;\r\n        return 0;\r\n    }\r\n    convexHull=(e)=>{\r\n        e.preventDefault()\r\n        var points=this.state.points;\r\n        if(points.length<=2){\r\n            var error=document.getElementById(\"error\");\r\n            error.innerHTML=\"The available points is less than three!!\";\r\n            error.style.display=\"block\";\r\n            return;\r\n        }\r\n        document.getElementById(\"error\").style.display=\"none\";\r\n        points.sort(this.compare);\r\n        var n=points.length;\r\n        var p1=points[0],p2=points[n-1];\r\n        var up=[],lo=[];\r\n        lo.push(p1);\r\n        up.push(p1);\r\n        const context = this.canvas.getContext('2d');\r\n\r\n        // context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        var animate=[]\r\n        for(let i=1;i<n;i++){\r\n            if(i==n-1||this.orientation(p1,points[i],p2)!=-1){\r\n                animate.push(JSON.parse(JSON.stringify(up)));\r\n                while(up.length>=2&&this.orientation(up[up.length-2],up[up.length-1],points[i])==-1){\r\n                    up.pop();\r\n                    animate.push(JSON.parse(JSON.stringify(up)));\r\n                }\r\n                up.push(points[i]);\r\n                \r\n            }\r\n            if(i==n-1||this.orientation(p1,points[i],p2)!=1){\r\n                animate.push(JSON.parse(JSON.stringify(lo)));\r\n                while(lo.length>=2&&this.orientation(lo[lo.length-2],lo[lo.length-1],points[i])==1){\r\n                    lo.pop();\r\n                    animate.push(JSON.parse(JSON.stringify(lo)));\r\n                }\r\n                lo.push(points[i])\r\n            }\r\n        }\r\n        animate.push(JSON.parse(JSON.stringify(up)));\r\n        animate.push(JSON.parse(JSON.stringify(lo)));\r\n        console.log(animate)\r\n        var flag;\r\n        for(let i=0;i<animate.length;i++){\r\n            // context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            setTimeout(()=>{\r\n                // context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                this.drawAllNodes();\r\n                var temp=animate[i]\r\n                for(let j=0;j<temp.length-1;j++){\r\n                        this.drawDottedLine(temp[j].x,temp[j].y,temp[j+1].x,temp[j+1].y);\r\n                    \r\n                }\r\n            },500*(i))\r\n            flag=i;\r\n        }\r\n        var result=[];\r\n        for(let i=0;i<up.length-1;i++){\r\n            result.push(up[i]);\r\n        }\r\n        for(let i=lo.length-1;i>=0;i--){\r\n            result.push(lo[i]);\r\n        }\r\n        setTimeout(()=>{\r\n            context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.drawAllNodes();\r\n            this.makeCircle(p1.x,p1.y);\r\n            this.makeCircle(p2.x,p2.y);\r\n            for(let i=0;i<result.length-1;i++){\r\n                this.drawLine(result[i].x,result[i].y,result[i+1].x,result[i+1].y);\r\n            }\r\n        },500*flag);\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{height:\"100vh\",alignItems:\"center\"}}>\r\n                <Instruct show={this.state.showModal}>\r\n                    <h3>How to use?</h3>\r\n                <img className=\"card-img-top img-thumbnail\" style={{marginBottom:\"5px\"}} src={instruct_gif} alt=\"Card image cap\"/>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={this.hideModal}>Close</button>\r\n                </Instruct>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{color:\"white\"}}>\r\n                    <a className=\"navbar-brand\" href=\"#\">ConvexHull Visualizer</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/\" className=\"nav-link\">Home</NavLink>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>this.createRandomNodes()}>Random Points <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={this.showModal}>Instructions <span className=\"sr-only\" >(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={()=>this.clearBoard()}>Clear <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <div id=\"error\" className=\"alert alert-danger\" style={{margin:\"auto\",marginBottom:\"5px\",display:\"none\",width:\"50vw\"}} role=\"alert\">\r\n                        </div>\r\n                        </ul>\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={(e)=>this.convexHull(e)}>Run</button>\r\n                        </form>\r\n                    </div>\r\n                    </nav>\r\n                <canvas id=\"myCanvas\" className=\"canvas\" width={0.7*window.innerWidth} height={0.7*window.innerHeight} ></canvas> \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ConvexHull;"]},"metadata":{},"sourceType":"module"}